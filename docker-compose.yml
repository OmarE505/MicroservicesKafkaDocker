version: "3.9"

services:
  zookeeper:
    image: "zookeeper:3.6.3"
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
  kafka:
    image: "bitnami/kafka:3"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test-topic:1:1"
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT , PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  # MongoDB service
  mongoDB:
    container_name: MongoDB
    image: mongo:latest
    restart: always
    volumes:
      - mongoDB:/data/db
  # Customer service
  customer:
    container_name: Customer
    build: ./Customer
    ports:
      - 3002:3002
    environment:
      PORT: 3002
      MONGO_URI: mongodb://mongoDB:27017/
      DB_NAME: CustomerDB
    depends_on:
      - mongoDB
      - kafka
  # Marketer service
  marketer:
    container_name: Marketer
    build: ./Marketer
    ports:
      - 3001:3001
    environment:
      PORT: 3001
    depends_on:
      - kafka
volumes:
  mongoDB: {}
